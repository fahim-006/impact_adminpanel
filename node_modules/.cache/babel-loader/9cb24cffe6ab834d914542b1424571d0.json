{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mashrurhossainkhan/Desktop/Impact_finance_admin_frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mashrurhossainkhan/Desktop/Impact_finance_admin_frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from '../constants/userConstants';\nexport var login = function login(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: USER_LOGIN_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context.next = 5;\n              return axios.post('http://localhost:5000/api/user/login', {\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfoFamous', JSON.stringify(data));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: USER_LOGIN_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.removeItem('userInfoFamous');\n    dispatch({\n      type: USER_LOGOUT\n    });\n  };\n};\nexport var register = function register(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: USER_REGISTER_REQUEST\n              });\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              _context2.next = 5;\n              return axios.post('http://localhost:5000/api/user/register', {\n                name: name,\n                email: email,\n                password: password\n              }, config);\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              data = _yield$axios$post2.data;\n              dispatch({\n                type: USER_REGISTER_SUCCESS,\n                payload: data\n              });\n              dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n              });\n              localStorage.setItem('userInfoFamous', JSON.stringify(data));\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: USER_REGISTER_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/mashrurhossainkhan/Desktop/Impact_finance_admin_frontend/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","response","message","logout","removeItem","register","name"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      })\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/user/login',\r\n        { email, password },\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfoFamous', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const logout=()=>(dispatch)=>{\r\n    localStorage.removeItem('userInfoFamous')\r\n    dispatch({type:USER_LOGOUT})\r\n  }\r\n\r\n  export const register = (name,email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n      })\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        'http://localhost:5000/api/user/register',\r\n        { name,email, password },\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      })\r\n\r\n      \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfoFamous', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}